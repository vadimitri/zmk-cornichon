/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Cornichon Layout (6 cols + 2 thumbs per side)
// ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
// │  0  │  1  │  2  │  3  │  4  │  5  │   │  6  │  7  │  8  │  9  │ 10  │ 11  │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ 12  │ 13  │ 14  │ 15  │ 16  │ 17  │   │ 18  │ 19  │ 20  │ 21  │ 22  │ 23  │
// ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
// │ 24  │ 25  │ 26  │ 27  │ 28  │ 29  │   │ 30  │ 31  │ 32  │ 33  │ 34  │ 35  │
// └─────┴─────┴─────┼─────┼─────┴─────┘   └─────┴─────┼─────┼─────┴─────┴─────┘
//                   │ 36  │ 37  │                   │ 38  │ 39  │
//                   └─────┴─────┘                   └─────┴─────┘

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │ TAB │  Q  │  W  │  E  │  R  │  T  │   │  Y  │  U  │  I  │  O  │  P  │ BKSP│
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │ ESC │  A  │  S  │  D  │  F  │  G  │   │  H  │  J  │  K  │  L  │  ;  │  '  │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │  LS │  Z  │  X  │  C  │  V  │  B  │   │  N  │  M  │  ,  │  .  │  /  │ESC  │
            // └─────┴─────┴─────┼─────┼─────┴─────┘   └─────┴─────┼─────┼─────┴─────┴─────┘
            //                   │ GUI │SPACE│                   │ENTER│ FN  │
            //                   └─────┴─────┘                   └─────┴─────┘
            bindings = <
                &kp  TAB         &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSPC
                &kp ESC          &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
                &kp LSHIFT       &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp RSHIFT
                                                                &kp LGUI    &kp SPACE   &kp RET     &mo 1
            >;
        };

        lower_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │  1  │  2  │  3  │  4  │  5  │  6  │   │  6  │  7  │  8  │  9  │  0  │ DEL │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │ BT1 │ BT2 │ BT3 │ BT4 │ BT5 │     │   │ LFT │ DWN │ UP  │ RGT │     │     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │BTCLR│     │     │     │     │     │   │     │     │     │     │     │     │
            // └─────┴─────┴─────┼─────┼─────┴─────┘   └─────┴─────┼─────┼─────┴─────┴─────┘
            //                   │     │     │                   │     │ ^^^ │
            //                   └─────┴─────┘                   └─────┴─────┘
            bindings = <
                &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp DEL
                &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans          &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &trans          &trans
                &bt BT_CLR      &out OUT_TOG    &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &mo 2
                                                                &trans          &trans                                          &trans          &trans
            >;
        };

        raise_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │  !  │  @  │  #  │  $  │  %  │  ^  │   │  ^  │  &  │  *  │  (  │  )  │ DEL │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │     │     │     │     │     │   │  -  │  =  │  [  │  ]  │  \  │  `  │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │     │     │     │     │     │   │  _  │  +  │  {  │  }  │ "|" │ ^^^ │
            // └─────┴─────┴─────┼─────┼─────┴─────┘   └─────┴─────┼─────┼─────┴─────┴─────┘
            //                   │     │     │                   │     │     │
            //                   └─────┴─────┘                   └─────┴─────┘
            bindings = <
                &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT       &kp CARET       &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &kp DEL
                &trans          &trans          &trans          &trans          &trans          &trans          &kp MINUS       &kp EQUAL       &kp LBKT        &kp RBKT        &kp BSLH        &kp GRAVE
                &trans          &trans          &trans          &trans          &trans          &trans          &kp UNDER       &kp PLUS        &kp LBRC        &kp RBRC        &kp PIPE        &trans
                                                                &trans          &trans                                          &trans          &trans
            >;
        };

        adjust_layer {
            // Function keys and system controls
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │ F1  │ F2  │ F3  │ F4  │ F5  │ F6  │   │ F6  │ F7  │ F8  │ F9  │ F10 │ F11 │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │     │     │     │     │     │   │     │     │     │     │     │ F12 │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │     │     │     │     │     │   │     │     │     │     │     │     │
            // └─────┴─────┴─────┼─────┼─────┴─────┘   └─────┴─────┼─────┼─────┴─────┴─────┘
            //                   │     │     │                   │     │     │
            //                   └─────┴─────┘                   └─────┴─────┘
            bindings = <
                &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
                &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &kp F12
                &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans
                                                                &trans          &trans                                          &trans          &trans
            >;
        };
    };
};

// Combos for quick access
/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;  // Q + W = ESC
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <12 13>; // A + S = TAB
            bindings = <&kp TAB>;
        };

        combo_ret {
            timeout-ms = <50>;
            key-positions = <21 22>; // L + ; = ENTER
            bindings = <&kp RET>;
        };

        combo_caps {
            timeout-ms = <50>;
            key-positions = <13 14>; // S + D = CAPS
            bindings = <&kp CAPS>;
        };
    };
};

// Conditional layers
/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};